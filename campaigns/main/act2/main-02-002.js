// Mission: Final Convergence
// Campaign: Main Campaign
// Act: 2 - Escalation
// Mission: 002

(function() {
    const mission = {
        id: 'main-02-002',
        campaign: 'main',
        act: 2,
        missionNumber: 2,

        name: 'Final Convergence',
        title: 'Research Lab Assault',
        description: 'Assault heavily fortified research lab and capture the mainframe.',
        briefing: 'The enemy has fortified their final research lab. This is our last chance to stop their weapon program. Breach their defenses and capture the mainframe.',

        agents: {
            max: 6,
            required: 3,
            recommended: 5
        },

        map: {
            type: 'fortress',
            name: 'Fortified Research Lab',
            width: 100,
            height: 100,
            spawn: { x: 50, y: 95 },
            extraction: { x: 50, y: 5 },

            generation: {
                baseType: 'walls',

                outerWalls: { x1: 10, y1: 10, x2: 89, y2: 89 },
                middleWalls: { x1: 25, y1: 25, x2: 74, y2: 74 },
                innerWalls: { x1: 40, y1: 40, x2: 59, y2: 59 },

                gates: [
                    { x: 50, y: 10, type: 'outer' },
                    { x: 50, y: 25, type: 'middle' },
                    { x: 50, y: 40, type: 'inner' }
                ],

                towers: [
                    { x: 20, y: 20 }, { x: 80, y: 20 },
                    { x: 20, y: 80 }, { x: 80, y: 80 }
                ],

                mainframe: { x: 48, y: 48, width: 4, height: 4 }
            },

            embedded: {
                tiles: [
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "################################################.....###############################################",
                    "################################################.....###############################################",
                    "################################################.....###############################################",
                    "################################################.....###############################################",
                    "################################################.....###############################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "####################################################################################################",
                    "################################################.....###############################################",
                    "################################################.....###############################################",
                    "################################################.....###############################################",
                    "################################################.....###############################################",
                    "################################################.....###############################################",
                    "####################################################################################################",
                    "####################################################################################################"
                ],
                spawn: { x: 50, y: 95 },
                extraction: { x: 50, y: 5 },
                items: [
                    { type: 'gate', x: 50, y: 10, id: 0 },
                    { type: 'gate', x: 50, y: 25, id: 1 },
                    { type: 'gate', x: 50, y: 40, id: 2 }
                ],
                doors: [],
                coverCount: 120
            },

            gates: [
                { x: 50, y: 10, breached: false, id: 0 },
                { x: 50, y: 25, breached: false, id: 1 },
                { x: 50, y: 40, breached: false, id: 2 }
            ],

            enemySpawns: [
                { x: 30, y: 30 }, { x: 70, y: 30 },
                { x: 30, y: 70 }, { x: 70, y: 70 },
                { x: 50, y: 20 }, { x: 50, y: 80 },
                { x: 20, y: 50 }, { x: 80, y: 50 },
                { x: 45, y: 45 }, { x: 55, y: 55 },
                { x: 45, y: 55 }, { x: 55, y: 45 }
            ],

            coverPositions: 120
        },

        objectives: [
            {
                id: 'breach_outer',
                type: 'interact',
                target: 'gate',
                specific: [0],
                required: true,
                description: 'Breach outer gate'
            },
            {
                id: 'breach_inner',
                type: 'interact',
                target: 'gate',
                specific: [1, 2],
                required: true,
                description: 'Breach inner defenses',
                triggerAfter: ['breach_outer']
            },
            {
                id: 'capture_mainframe',
                type: 'interact',
                target: 'terminal',
                specific: ['mainframe'],
                required: true,
                description: 'Capture the mainframe',
                triggerAfter: ['breach_inner']
            },
            {
                id: 'avoid_civilians',
                type: 'custom',
                required: false,
                checkFunction: 'checkNoCivilianCasualties'
            },
            {
                id: 'keep_agents_alive',
                type: 'custom',
                required: false,
                checkFunction: 'checkAgentsAlive',
                minAgents: 2
            }
        ],

        enemies: {
            count: 12,
            types: ['guard', 'soldier', 'heavy', 'sniper'],
            waves: [
                { trigger: 'breach_outer', count: 8, delay: 5 },
                { trigger: 'breach_inner', count: 10, delay: 10 }
            ]
        },

        rewards: {
            credits: 5000,
            researchPoints: 150
        }
    };

    if (typeof CampaignSystem !== 'undefined') {
        CampaignSystem.registerMission('main', 2, 'main-02-002', mission);
    }
    if (typeof window !== 'undefined') {
        window.CAMPAIGN_MISSIONS = window.CAMPAIGN_MISSIONS || {};
        window.CAMPAIGN_MISSIONS['main-02-002'] = mission;
    }
})();