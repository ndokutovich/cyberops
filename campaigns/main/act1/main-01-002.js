// Mission: Network Breach - Government Facility
// Campaign: Main Campaign
// Act: 1 - Beginning Operations
// Mission: 002

(function() {
    const mission = {
        id: 'main-01-002',
        campaign: 'main',
        act: 1,
        missionNumber: 2,

        name: 'Network Breach',
        title: 'Government Facility',
        description: 'Infiltrate the government facility and access their secure network.',
        briefing: 'A government facility is developing dangerous AI weapons. Break into their network and steal the plans.',

        agents: {
            max: 4,
            required: 2,
            recommended: 3
        },

        map: {
            type: 'government',
            name: 'Government Research Facility',
            width: 90,
            height: 70,
            spawn: { x: 2, y: 68 },
            extraction: { x: 88, y: 2 },

            generation: {
                baseType: 'walls',
                securityLevel: 'high',

                mainCorridor: { y1: 30, y2: 40, x1: 5, x2: 85 },

                securityRooms: [
                    { x: 10, y: 10, width: 20, height: 15 },
                    { x: 60, y: 10, width: 20, height: 15 },
                    { x: 10, y: 45, width: 20, height: 15 },
                    { x: 60, y: 45, width: 20, height: 15 },
                    { x: 35, y: 25, width: 20, height: 20 }
                ],

                clearAreas: [
                    { x1: 0, y1: 65, x2: 10, y2: 69 },
                    { x1: 85, y1: 0, x2: 89, y2: 5 }
                ]
            },

            embedded: {
                tiles: [
                    "#####################################################################################.....",
                    "#####################################################################################.....",
                    "#####################################################################################.....",
                    "#####################################################################################.....",
                    "#####################################################################################.....",
                    "#####################################################################################.....",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "##########################################################################################",
                    "...........###############################################################################",
                    "...........###############################################################################",
                    "...........###############################################################################",
                    "...........###############################################################################",
                    "...........###############################################################################"
                ],
                spawn: { x: 2, y: 68 },
                extraction: { x: 88, y: 2 },
                items: [
                    { type: 'terminal', x: 20, y: 17, id: 0 },
                    { type: 'terminal', x: 70, y: 17, id: 1 },
                    { type: 'terminal', x: 45, y: 35, id: 2 }
                ],
                doors: [],
                coverCount: 80
            },

            // Terminals for hacking objective
            terminals: [
                { x: 20, y: 17, hacked: false, id: 0 },
                { x: 70, y: 17, hacked: false, id: 1 },
                { x: 45, y: 35, hacked: false, id: 2 }
            ],

            enemySpawns: [
                { x: 20, y: 20 }, { x: 70, y: 20 },
                { x: 20, y: 50 }, { x: 70, y: 50 },
                { x: 45, y: 35 }, { x: 30, y: 35 }
            ],

            coverPositions: 80
        },

        objectives: [
            {
                id: 'hack_all_terminals',
                type: 'interact',
                target: 'terminal',
                count: 3,
                required: true,
                description: 'Hack 3 terminals',
                displayText: 'Terminals hacked: {current}/{required}'
            },
            {
                id: 'extract_data',
                type: 'reach',
                target: 'extraction',
                required: true,
                description: 'Extract data',
                displayText: 'Reach extraction point',
                triggerAfter: ['hack_all_terminals']
            },
            {
                id: 'avoid_civilians',
                type: 'custom',
                required: false,
                checkFunction: 'checkNoCivilianCasualties'
            },
            {
                id: 'keep_agents_alive',
                type: 'custom',
                required: false,
                checkFunction: 'checkAgentsAlive',
                minAgents: 2
            }
        ],

        enemies: {
            count: 6,
            types: ['guard', 'soldier', 'heavy']
        },

        rewards: {
            credits: 2500,
            researchPoints: 75
        },

        // NPCs
        npcs: [
            {
                id: 'underground_hacker',
                spawn: { x: 20, y: 10 },
                quests: ['network_sabotage']
            }
        ]
    };

    if (typeof CampaignSystem !== 'undefined') {
        CampaignSystem.registerMission('main', 1, 'main-01-002', mission);
    }
    if (typeof window !== 'undefined') {
        window.CAMPAIGN_MISSIONS = window.CAMPAIGN_MISSIONS || {};
        window.CAMPAIGN_MISSIONS['main-01-002'] = mission;
    }
})();